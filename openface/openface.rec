BootStrap: docker
From: nvidia/cuda:10.2-cudnn7-devel-ubuntu16.04

%runscript



%environment
PATH="/opt/cmake-3.14.2-Linux-x86_64/bin:${PATH}"
OPENPOSE_ROOT=/opt/openpose/
PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64
CUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda

%post

echo "Installing dependencies..." && \
        apt-get -y --no-install-recommends update && \
        apt-get -y --no-install-recommends upgrade && \
        apt-get install -y --no-install-recommends \
        bc \
        build-essential \
        cmake \
        git wget unzip \
        libatlas-base-dev \
        libprotobuf-dev \
        libleveldb-dev \
        libsnappy-dev \
        libhdf5-serial-dev \
        protobuf-compiler \
        libboost-all-dev \
        libgflags-dev \
        libgoogle-glog-dev \
        liblmdb-dev \
        pciutils \
        python3-setuptools \
        python3-dev \
        python3-pip \
        opencl-headers \
        ocl-icd-opencl-dev \
        libviennacl-dev \
        libcanberra-gtk-module \
        libopencv-dev \
        libssl-dev \
        sudo
    
    python3 --version
    python3 -m pip install \
        numpy \
        protobuf \
        opencv-python \


    apt-get -y update && \
    apt-get -y install libopenblas-dev liblapack-dev && \
    apt-get -y install  libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev && \
    apt-get -y install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev
    
    apt-get install -y software-properties-common
    apt-get -y update
    #need to install correct gpu drivers
    # install nvidia driver (current system version: 440.33)
    add-apt-repository ppa:graphics-drivers
    apt-get update --fix-missing
    apt-get install -y nvidia-440-dev

    cd /opt
    wget https://github.com/Kitware/CMake/releases/download/v3.17.3/cmake-3.17.3.zip
    unzip cmake-3.17.3.zip
    cd cmake-3.17.3
    cmake . 
    make
    make install

    git clone https://github.com/nagadomi/distro /opt/torch --recursive
	cd /opt/torch; bash install-deps;
	./install.sh

    PATH="/opt/cmake-3.17.3/bin:${PATH}"
    PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
    LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda-10.2/lib64
    CUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda

    OPENFACE_DIR=/opt/OpenFace

    cp /etc/apt/sources.list /etc/apt/sources.list.bak && \
    rm -f /etc/apt/sources.lisdt

	wget https://raw.githubusercontent.com/d-bohn/openface_aci/master/assets/xenial-sources.list 
    cp xenial-sources.list /etc/apt/sources.list

    apt-get update

    cd /opt
    wget https://github.com/opencv/opencv/archive/3.4.0.zip 
	unzip 3.4.0.zip && \
    cd opencv-3.4.0 && \
    mkdir -p build && \
    cd build 
    cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D WITH_CUDA=ON -D BUILD_SHARED_LIBS=ON .. 
    make -j4
    make install 
    cd ../.. 
    rm 3.4.0.zip 
    rm -r opencv-3.4.0

    cd /opt
	wget http://dlib.net/files/dlib-19.13.tar.bz2 
	tar xf dlib-19.13.tar.bz2 && \
    cd dlib-19.13 && \
    mkdir -p build && \
    cd build && \
    cmake .. && \
    cmake --build . --config Release && \
    make install && \
    ldconfig && \
    cd ../.. && \
    rm -r dlib-19.13.tar.bz2

    cd /opt
	apt-get -y install libboost-all-dev
	git clone https://github.com/TadasBaltrusaitis/OpenFace.git
	cd ${OPENFACE_DIR} && /bin/sh download_models.sh

	cd ${OPENFACE_DIR} && \
    mkdir -p build && \
    cd build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE .. && \
    make && \
    cd .. && \
    echo "OpenFace installed."

    #------------------------------------------------------------------------------
    # Create local binding points for ICS-ACI
    #------------------------------------------------------------------------------
    mkdir -p /storage/home
    mkdir -p /storage/work
    mkdir -p /gpfs/scratch
    mkdir -p /gpfs/group
    mkdir -p /var/spool/torque
